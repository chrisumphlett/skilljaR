get_text <- httr::content(get_results, "text")
print("2")
get_json <- jsonlite::fromJSON(get_text, flatten = TRUE)
print("3")
iteration_df <- as.data.frame(get_json$results)
print("4")
return(iteration_df)
}
df <- purrr::map_chr(results_sets_list, get_results)
get_results <- function(x) {
build_api_path <- paste0("https://api.skilljar.com/v1/domains/",
domain,
"/users?page_size=",
results_limit,
"&page=",
x)
print(build_api_path)
get_results <- httr::GET(build_api_path, httr::add_headers(
"Authorization" = paste("Basic", gsub("\n", "", secret)),
"Content-Type" = "application/x-www-form-urlencoded;charset=UTF-8"
), type = "basic")
print("1")
get_text <- httr::content(get_results, "text")
print("2")
get_json <- jsonlite::fromJSON(get_text, flatten = TRUE)
print("3")
iteration_df <- as.data.frame(get_json$results)
print("4")
print(str(iteration_df))
print(head(iteration_df))
}
df <- purrr::map_chr(results_sets_list, get_results)
purrr::map_chr(results_sets_list, get_results)
get_results <- function(x) {
build_api_path <- paste0("https://api.skilljar.com/v1/domains/",
domain,
"/users?page_size=",
results_limit,
"&page=",
x)
# print(build_api_path)
get_results <- httr::GET(build_api_path, httr::add_headers(
"Authorization" = paste("Basic", gsub("\n", "", secret)),
"Content-Type" = "application/x-www-form-urlencoded;charset=UTF-8"
), type = "basic")
# print("1")
get_text <- httr::content(get_results, "text")
# print("2")
get_json <- jsonlite::fromJSON(get_text, flatten = TRUE)
# print("3")
iteration_df <- as.data.frame(get_json$results)
# print("4")
print(str(iteration_df))
# print(head(iteration_df))
}
purrr::map_chr(results_sets_list, get_results)
df <- purrr::map_dfr(results_sets_list, get_results)
# print("4")
# print(str(iteration_df))
# print(head(iteration_df))
return(iteration_df)
get_results <- function(x) {
build_api_path <- paste0("https://api.skilljar.com/v1/domains/",
domain,
"/users?page_size=",
results_limit,
"&page=",
x)
# print(build_api_path)
get_results <- httr::GET(build_api_path, httr::add_headers(
"Authorization" = paste("Basic", gsub("\n", "", secret)),
"Content-Type" = "application/x-www-form-urlencoded;charset=UTF-8"
), type = "basic")
# print("1")
get_text <- httr::content(get_results, "text")
# print("2")
get_json <- jsonlite::fromJSON(get_text, flatten = TRUE)
# print("3")
iteration_df <- as.data.frame(get_json$results)
# print("4")
# print(str(iteration_df))
# print(head(iteration_df))
return(iteration_df)
}
df <- purrr::map_dfr(results_sets_list, get_results)
?purrr:::map_dfr
?httr::GET
get_results <- function(x) {
build_api_path <- paste0("https://api.skilljar.com/v1/domains/",
domain,
"/users?page_size=",
results_limit,
"&page=",
x)
print(build_api_path)
get_results <- httr::GET(build_api_path, httr::add_headers(
"Authorization" = paste("Basic", gsub("\n", "", secret)),
"Content-Type" = "application/x-www-form-urlencoded;charset=UTF-8"
), type = "basic")
print("1")
get_text <- httr::content(get_results, "text")
print("2")
get_json <- jsonlite::fromJSON(get_text, flatten = TRUE)
print("3")
iteration_df <- as.data.frame(get_json$results)
print("4")
# print(str(iteration_df))
# print(head(iteration_df))
return(iteration_df)
}
df <- purrr::map_dfr(results_sets_list, get_results)
?httr::content
get_users <- function(domain, users_desired, _encoding = "UTF-8"){
total_pages <- floor(users_desired / 10000) + 1
pages_list <- seq(from = 1, to = total_pages, by = 1)
_page_size = min(10000, users_desired)
get_results <- function(x) {
build_api_path <- paste0("https://api.skilljar.com/v1/domains/",
domain,
"/users?page_size=",
_page_size,
"&page=",
x)
# print(build_api_path)
get_results <- httr::GET(build_api_path, httr::add_headers(
"Authorization" = paste("Basic", gsub("\n", "", secret)),
"Content-Type" = "application/x-www-form-urlencoded;charset=UTF-8"
), type = "basic")
# print("1")
get_text <- httr::content(get_results, "text", encoding = "UTF-8")
get_json <- jsonlite::fromJSON(get_text, flatten = TRUE)
iteration_df <- as.data.frame(get_json$results)
return(iteration_df)
}
df <- purrr::map_dfr(results_sets_list, get_results)
return(df)
}
get_users <- function(domain, users_desired, _encoding = "UTF-8"){
total_pages <- floor(users_desired / 10000) + 1
pages_list <- seq(from = 1, to = total_pages, by = 1)
_page_size = min(10000, users_desired)
get_results <- function(x) {
build_api_path <- paste0("https://api.skilljar.com/v1/domains/",
domain,
"/users?page_size=",
_page_size,
"&page=",
x)
# print(build_api_path)
get_results <- httr::GET(build_api_path, httr::add_headers(
"Authorization" = paste("Basic", gsub("\n", "", secret)),
"Content-Type" = "application/x-www-form-urlencoded;charset=UTF-8"
), type = "basic")
# print("1")
get_text <- httr::content(get_results, "text", encoding = "UTF-8")
get_json <- jsonlite::fromJSON(get_text, flatten = TRUE)
iteration_df <- as.data.frame(get_json$results)
return(iteration_df)
}
df <- purrr::map_dfr(results_sets_list, get_results)
return(df)
}
get_users <- function(domain, users_desired, encoding_ = "UTF-8"){
total_pages <- floor(users_desired / 10000) + 1
pages_list <- seq(from = 1, to = total_pages, by = 1)
page_size_ = min(10000, users_desired)
get_results <- function(x) {
build_api_path <- paste0("https://api.skilljar.com/v1/domains/",
domain,
"/users?page_size=",
page_size_,
"&page=",
x)
# print(build_api_path)
get_results <- httr::GET(build_api_path, httr::add_headers(
"Authorization" = paste("Basic", gsub("\n", "", secret)),
"Content-Type" = "application/x-www-form-urlencoded;charset=UTF-8"
), type = "basic")
# print("1")
get_text <- httr::content(get_results, "text", encoding = encoding_)
get_json <- jsonlite::fromJSON(get_text, flatten = TRUE)
iteration_df <- as.data.frame(get_json$results)
return(iteration_df)
}
df <- purrr::map_dfr(results_sets_list, get_results)
return(df)
}
df <- get_users(domain = "academy.techsmith.com", users_desired = 1000)
get_users <- function(domain, users_desired, encoding_ = "UTF-8"){
total_pages <- floor(users_desired / 10000) + 1
print(total_pages)
pages_list <- seq(from = 1, to = total_pages, by = 1)
print(pages_list)
page_size_ = min(10000, users_desired)
print(page_size_)
get_results <- function(x) {
build_api_path <- paste0("https://api.skilljar.com/v1/domains/",
domain,
"/users?page_size=",
page_size_,
"&page=",
x)
# print(build_api_path)
get_results <- httr::GET(build_api_path, httr::add_headers(
"Authorization" = paste("Basic", gsub("\n", "", secret)),
"Content-Type" = "application/x-www-form-urlencoded;charset=UTF-8"
), type = "basic")
# print("1")
get_text <- httr::content(get_results, "text", encoding = encoding_)
get_json <- jsonlite::fromJSON(get_text, flatten = TRUE)
iteration_df <- as.data.frame(get_json$results)
return(iteration_df)
}
df <- purrr::map_dfr(results_sets_list, get_results)
return(df)
}
df <- get_users(domain = "academy.techsmith.com", users_desired = 1000)
View(df)
get_users <- function(domain, users_desired, encoding_ = "UTF-8"){
total_pages <- floor(users_desired / 10000) + 1
print(total_pages)
pages_list <- seq(from = 1, to = total_pages, by = 1)
print(pages_list)
get_results <- function(x) {
build_api_path <- paste0("https://api.skilljar.com/v1/domains/",
domain,
"/users?page_size=10000&page=",
x)
# print(build_api_path)
get_results <- httr::GET(build_api_path, httr::add_headers(
"Authorization" = paste("Basic", gsub("\n", "", secret)),
"Content-Type" = "application/x-www-form-urlencoded;charset=UTF-8"
), type = "basic")
# print("1")
get_text <- httr::content(get_results, "text", encoding = encoding_)
get_json <- jsonlite::fromJSON(get_text, flatten = TRUE)
iteration_df <- as.data.frame(get_json$results)
return(iteration_df)
}
df <- purrr::map_dfr(results_sets_list, get_results)
return(df)
}
df <- get_users(domain = "academy.techsmith.com", users_desired = 11000)
get_users <- function(domain, users_desired, encoding_ = "UTF-8"){
total_pages <- floor(users_desired / 10000) + 1
# print(total_pages)
pages_list <- seq(from = 1, to = total_pages, by = 1)
# print(pages_list)
get_results <- function(x) {
build_api_path <- paste0("https://api.skilljar.com/v1/domains/",
domain,
"/users?page_size=10000&page=",
x)
# print(build_api_path)
get_results <- httr::GET(build_api_path, httr::add_headers(
"Authorization" = paste("Basic", gsub("\n", "", secret)),
"Content-Type" = "application/x-www-form-urlencoded;charset=UTF-8"
), type = "basic")
# print("1")
get_text <- httr::content(get_results, "text", encoding = encoding_)
get_json <- jsonlite::fromJSON(get_text, flatten = TRUE)
iteration_df <- as.data.frame(get_json$results)
return(iteration_df)
}
df <- purrr::map_dfr(pages_list, get_results)
return(df)
}
df <- get_users(domain = "academy.techsmith.com", users_desired = 11000)
df <- get_users(domain = "academy.techsmith.com", users_desired = 55000)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::check()
get_users <- function(domain, users_desired, api_token, encoding_ = "UTF-8"){
total_pages <- floor(users_desired / 10000) + 1
pages_list <- seq(from = 1, to = total_pages, by = 1)
token <- jsonlite::base64_enc(api_token)
get_results <- function(x) {
build_api_path <- paste0("https://api.skilljar.com/v1/domains/",
domain,
"/users?page_size=10000&page=",
x)
get_results <- httr::GET(build_api_path, httr::add_headers(
"Authorization" = paste("Basic", gsub("\n", "", token)),
"Content-Type" = "application/x-www-form-urlencoded;charset=UTF-8"
), type = "basic")
get_text <- httr::content(get_results, "text", encoding = encoding_)
get_json <- jsonlite::fromJSON(get_text, flatten = TRUE)
iteration_df <- as.data.frame(get_json$results)
return(iteration_df)
}
df <- purrr::map_dfr(pages_list, get_results)
return(df)
}
df <- get_users(domain = "academy.techsmith.com", users_desired = 55000)
library(jsonlite)
path1 <- "https://api.skilljar.com/v1/domains/academy.techsmith.com/users?page_size=10000&page=1"
path2 <- "https://api.skilljar.com/v1/domains/academy.techsmith.com/users?page_size=10000&page=4"
secret <- jsonlite::base64_enc("sk-live-ab5169ba652601a3c27eaee28cbacd9f052876cb")
df <- get_users(domain = "academy.techsmith.com", users_desired = 55000)
df <- get_users(domain = "academy.techsmith.com", users_desired = 55000, api_token = secret)
library(httr)
req2 <- httr::GET(path1, httr::add_headers(
"Authorization" = paste("Basic", gsub("\n", "", secret)),
"Content-Type" = "application/x-www-form-urlencoded;charset=UTF-8"
), type = "basic")
req2$status_code
req_text <- content(req2, "text")
req_json <- fromJSON(req_text, flatten = TRUE)
req_df1 <- as.data.frame(req_json$results)
View(req_df1)
path1 <- "https://api.skilljar.com/v1/domains/certification.techsmith.com/users?page_size=10000&page=1"
req2 <- httr::GET(path1, httr::add_headers(
"Authorization" = paste("Basic", gsub("\n", "", secret)),
"Content-Type" = "application/x-www-form-urlencoded;charset=UTF-8"
), type = "basic")
req2$status_code
req_text <- content(req2, "text")
req_json <- fromJSON(req_text, flatten = TRUE)
req_df1 <- as.data.frame(req_json$results)
View(req_df1)
req2 <- httr::GET(path2, httr::add_headers(
"Authorization" = paste("Basic", gsub("\n", "", secret)),
"Content-Type" = "application/x-www-form-urlencoded;charset=UTF-8"
), type = "basic")
req2$status_code
req_text <- content(req2, "text")
req_json <- fromJSON(req_text, flatten = TRUE)
req_df2 <- as.data.frame(req_json$results)
View(req_df2)
path2 <- "https://api.skilljar.com/v1/domains&page=1"
req2 <- httr::GET(path2, httr::add_headers(
"Authorization" = paste("Basic", gsub("\n", "", secret)),
"Content-Type" = "application/x-www-form-urlencoded;charset=UTF-8"
), type = "basic")
req2$status_code
View(req2)
path1 <- "https://api.skilljar.com/v1/domains/certification.techsmith.com/users?page_size=10000&page=1"
secret <- jsonlite::base64_enc("sk-live-ab5169ba652601a3c27eaee28cbacd9f052876cb")
req <- httr::GET(path1, httr::add_headers(
"Authorization" = paste("Basic", gsub("\n", "", secret)),
"Content-Type" = "application/x-www-form-urlencoded;charset=UTF-8"
), type = "basic")
req$status_code
req_text <- content(req, "text")
req_json <- fromJSON(req_text, flatten = TRUE)
req_df2 <- as.data.frame(req_json$results)
path2 <- "https://api.skilljar.com/v1/domains?page=1"
req2 <- httr::GET(path2, httr::add_headers(
"Authorization" = paste("Basic", gsub("\n", "", secret)),
"Content-Type" = "application/x-www-form-urlencoded;charset=UTF-8"
), type = "basic")
req2$status_code
req_text <- content(req2, "text")
req_json <- fromJSON(req_text, flatten = TRUE)
req_df2 <- as.data.frame(req_json$results)
View(req_df2)
## domain details
path2 <- "https://api.skilljar.com/v1/domains/academy.techsmith.com"
req2 <- httr::GET(path2, httr::add_headers(
"Authorization" = paste("Basic", gsub("\n", "", secret)),
"Content-Type" = "application/x-www-form-urlencoded;charset=UTF-8"
), type = "basic")
req2$status_code
req_text <- content(req2, "text")
req_json <- fromJSON(req_text, flatten = TRUE)
req_df2 <- as.data.frame(req_json$results)
View(req_json)
View(req_df1)
path2 <- "https://api.skilljar.com/v1/users/{fz9l82cdhfp0}/published-courses?page=1"
req2 <- httr::GET(path2, httr::add_headers(
"Authorization" = paste("Basic", gsub("\n", "", secret)),
"Content-Type" = "application/x-www-form-urlencoded;charset=UTF-8"
), type = "basic")
req2$status_code
path2 <- "https://api.skilljar.com/v1/users/fz9l82cdhfp0/published-courses?page=1"
req2 <- httr::GET(path2, httr::add_headers(
"Authorization" = paste("Basic", gsub("\n", "", secret)),
"Content-Type" = "application/x-www-form-urlencoded;charset=UTF-8"
), type = "basic")
req2$status_code
req_text <- content(req2, "text")
req_json <- fromJSON(req_text, flatten = TRUE)
req_df2 <- as.data.frame(req_json$results)
View(req_json)
View(req_json[[5]][[1]])
path2 <- "https://api.skilljar.com/v1/users/r8qbl7ihmahq/published-courses?page=1"
req2 <- httr::GET(path2, httr::add_headers(
"Authorization" = paste("Basic", gsub("\n", "", secret)),
"Content-Type" = "application/x-www-form-urlencoded;charset=UTF-8"
), type = "basic")
req2$status_code
req_text <- content(req2, "text")
req_json <- fromJSON(req_text, flatten = TRUE)
View(req_json)
getwd()
write_csv(req_json, "DATA/mcurtis_skilljar_progress.csv")
vroom::vroom_write(req_json, "DATA/mcurtis_skilljar_progress.csv", delim = ",")
vroom::vroom_write(req_json, "mcurtis_skilljar_progress.csv", delim = ",")
View(req_df1)
get_users <- function(domain, users_desired, api_token, encoding_ = "UTF-8"){
total_pages <- floor(users_desired / 10000) + 1
pages_list <- seq(from = 1, to = total_pages, by = 1)
token <- jsonlite::base64_enc(api_token)
get_results <- function(x) {
build_api_path <- paste0("https://api.skilljar.com/v1/domains/",
domain,
"/users?page_size=10000&page=",
x)
get_results <- httr::GET(build_api_path, httr::add_headers(
"Authorization" = paste("Basic", gsub("\n", "", token)),
"Content-Type" = "application/x-www-form-urlencoded;charset=UTF-8"
), type = "basic")
get_text <- httr::content(get_results, "text", encoding = encoding_)
get_json <- jsonlite::fromJSON(get_text, flatten = TRUE)
iteration_df <- as.data.frame(get_json$results)
return(iteration_df)
}
df <- purrr::map_dfr(pages_list, get_results)
return(df)
}
secret <- jsonlite::base64_enc("sk-live-ab5169ba652601a3c27eaee28cbacd9f052876cb")
df <- get_users(domain = "academy.techsmith.com", users_desired = 5000, api_token = secret)
#'
#' @export
#'
#' @examples
#' \dontrun{
#' # Retrieve 1000 users
#' my_users <- get_users(domain = "training.mycompany.com",
#' users_desired = 1000,
#' api_token = "my-token")
#' }
users_desired <- 1000
total_pages <- floor(users_desired / 10000) + 1
pages_list <- seq(from = 1, to = total_pages, by = 1)
api_token <- "sk-live-ab5169ba652601a3c27eaee28cbacd9f052876cb"
token <- jsonlite::base64_enc(api_token)
get_results <- function(x) {
build_api_path <- paste0("https://api.skilljar.com/v1/domains/",
domain,
"/users?page_size=10000&page=",
x)
get_results <- httr::GET(build_api_path, httr::add_headers(
"Authorization" = paste("Basic", gsub("\n", "", token)),
"Content-Type" = "application/x-www-form-urlencoded;charset=UTF-8"
), type = "basic")
get_text <- httr::content(get_results, "text", encoding = encoding_)
get_json <- jsonlite::fromJSON(get_text, flatten = TRUE)
iteration_df <- as.data.frame(get_json$results)
return(iteration_df)
}
df <- purrr::map_dfr(pages_list, get_results)
domain <- "academy.techsmith.com"
df <- purrr::map_dfr(pages_list, get_results)
?httr::content
get_results <- function(x) {
build_api_path <- paste0("https://api.skilljar.com/v1/domains/",
domain,
"/users?page_size=10000&page=",
x)
get_results <- httr::GET(build_api_path, httr::add_headers(
"Authorization" = paste("Basic", gsub("\n", "", token)),
"Content-Type" = "application/x-www-form-urlencoded;charset=UTF-8"
), type = "basic")
get_text <- httr::content(get_results, "text")
get_json <- jsonlite::fromJSON(get_text, flatten = TRUE)
iteration_df <- as.data.frame(get_json$results)
return(iteration_df)
}
df <- purrr::map_dfr(pages_list, get_results)
get_results <- function(x) {
build_api_path <- paste0("https://api.skilljar.com/v1/domains/",
domain,
"/users?page_size=10000&page=",
x)
get_results <- httr::GET(build_api_path, httr::add_headers(
"Authorization" = paste("Basic", gsub("\n", "", token)),
"Content-Type" = "application/x-www-form-urlencoded;charset=UTF-8"
), type = "basic")
get_text <- httr::content(get_results, "text", encoding = "UTF-8")
get_json <- jsonlite::fromJSON(get_text, flatten = TRUE)
iteration_df <- as.data.frame(get_json$results)
return(iteration_df)
}
df <- purrr::map_dfr(pages_list, get_results)
get_users <- function(domain, users_desired, api_token, encoding_ = "UTF-8"){
total_pages <- floor(users_desired / 10000) + 1
pages_list <- seq(from = 1, to = total_pages, by = 1)
token <- jsonlite::base64_enc(api_token)
get_results <- function(x) {
build_api_path <- paste0("https://api.skilljar.com/v1/domains/",
domain,
"/users?page_size=10000&page=",
x)
get_results <- httr::GET(build_api_path, httr::add_headers(
"Authorization" = paste("Basic", gsub("\n", "", token)),
"Content-Type" = "application/x-www-form-urlencoded;charset=UTF-8"
), type = "basic")
get_text <- httr::content(get_results, "text", encoding = "UTF-8")
get_json <- jsonlite::fromJSON(get_text, flatten = TRUE)
iteration_df <- as.data.frame(get_json$results)
return(iteration_df)
}
df <- purrr::map_dfr(pages_list, get_results)
return(df)
}
df <- get_users(domain = "academy.techsmith.com", users_desired = 5000, api_token = secret)
token-raw <-"sk-live-ab5169ba652601a3c27eaee28cbacd9f052876cb"
token_raw <-"sk-live-ab5169ba652601a3c27eaee28cbacd9f052876cb"
df <- get_users(domain = "academy.techsmith.com", users_desired = 5000, api_token = token_raw)
